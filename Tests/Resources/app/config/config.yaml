imports:
    - { resource: security.yaml }

parameters:
    coral.site_cache.class: Doctrine\Common\Cache\ArrayCache
    coral.connector.cache.class: Doctrine\Common\Cache\ArrayCache
    coral.connector.request.class: Coral\CoreBundle\Tests\Service\Request\RequestMockup

services:
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
    default_controller:
        class: Coral\SiteBundle\Controller\DefaultController
        tags: ['controller.service_arguments']
        bind:
            $sitemap: '@coral.sitemap'
    my_test_controller:
        class: Coral\SiteBundle\Tests\Controller\MyTestController
        tags: ['controller.service_arguments']
    coral.connect.coral:
        class: Coral\CoreBundle\Service\Connector\CoralConnector
        arguments: ["@coral.connector.request", "%kernel.project_dir%/fixtures/coral_connect", "account", "apisecretkey"]
        tags:
            -  { name: coral.connector.service, service: "coral" }

twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    paths:
        "%kernel.project_dir%/../fixtures/AcmeContent/content": coral
        "%kernel.project_dir%/templates": ~

coral_site:
    content_path: "%kernel.project_dir%/../fixtures/AcmeContent/content"
    config_path: "%kernel.project_dir%/../fixtures/AcmeContent/configuration"

sensio_framework_extra:
    router:
        annotations: false

framework:
    secret: test
    test: ~
    session:
        storage_id: session.storage.filesystem
    form:            true
    csrf_protection: true
    validation:
        enabled: true
        enable_annotations: true
    default_locale: "en"
    router:
        strict_requirements: ~

monolog:
    handlers:
        main:
            type:  stream
            path:  "%kernel.logs_dir%/%kernel.environment%.log"
            level: debug

knp_markdown:
    parser:
        service: markdown.parser.flavored